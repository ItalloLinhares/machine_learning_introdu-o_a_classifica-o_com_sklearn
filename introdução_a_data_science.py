# -*- coding: utf-8 -*-
"""Introdução a Data Science.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yp4rWrOyOH9Q-0UI5s-G7j7cF9pha52k
"""

import pandas as pd
notas = pd.read_csv("ratings.csv")
notas.head()

notas.shape

notas.columns = ["UsuárioID", "FilmeID", "Nota", "Moemento"]
notas.head()

notas['Nota'].unique()

notas['Nota'].value_counts()

notas['Nota'].mean()

notas.Nota.plot(kind="hist")

import seaborn as sns
sns.boxplot(notas.Nota)

filmes = pd.read_csv("movies.csv")
filmes.columns = ["filmeId", "titulo", "generos"]
notas.columns = ["usuarioId", "filmeId", "nota","momento"]
print(filmes.head())
print(notas.head())

notas.query("filmeId==1")

agrupamento = notas.groupby("filmeId")["nota"]
agrupamento.mean()

filmes.head()

notas.nota.plot(kind='hist')
notas.nota.describe()

import seaborn as sns

sns.boxplot(notas.nota)
notas.nota.describe()

notas.query("filmeId==1").nota.mean()

notas.query("filmeId==2").nota.mean()

medias = notas.groupby("filmeId")["nota"].mean()
medias.head()

medias_por_filme = notas.groupby("filmeId").mean().nota
medias_por_filme.head()

medias_por_filme.plot(kind="hist")

sns.boxplot(medias_por_filme)
medias_por_filme.describe()

sns.distplot(medias_por_filme, bins=20)

import matplotlib.pyplot as plt
plt.hist(medias_por_filme)
plt.title("Histograma das médias dos filmes")

plt.figure(figsize=(5,8))
plt.boxplot(medias_por_filme)

tmdb = pd.read_csv("tmdb_5000_movies.csv")
tmdb.head()

tmdb.original_language.unique()

contagemLingua = tmdb["original_language"].value_counts().to_frame().reset_index()
contagemLingua.columns = ["Original_Language", "total"]
contagemLingua.head()

sns.barplot(x="Original_Language", y="total", data = contagemLingua)

!pip install seaborn==0.9.0

import seaborn as sns

sns.catplot(x = "original_language", kind = "count", data = tmdb)

plt.pie(contagemLingua["total"],  labels = contagemLingua['Original_Language'])

totalLingua = tmdb["original_language"].value_counts()
totalGeral = totalLingua.sum()
totalEN = totalLingua.loc["en"]
totalResto = totalGeral - totalEN
print(totalEN, totalResto)

dados = {
    'linguas' : ['ingles', 'outras'],
    'total' : [totalEN, totalResto]
}
dados = pd.DataFrame(dados)
dados

sns.barplot(x = 'linguas', y = 'total', data = dados)

totalLinguaOutrosFilmes = tmdb.query("original_language != 'en'").original_language.value_counts()
totalLinguaOutrosFilmes

filmesNaoIngles = tmdb.query("original_language != 'en'")
sns.catplot(x = "original_language", kind = "count", data = filmesNaoIngles, 
            aspect = 2, 
            order = totalLinguaOutrosFilmes.index,
            palette = 'GnBu_d')

notasToyStory = notas.query("filmeId==1")
notasJumanji = notas.query("filmeId==2")
print(len(notasToyStory), len(notasJumanji))

print("Média de notas do Toy Story %.2f" % notasToyStory.nota.mean())
print("Média de notas do Jumanji %.2f" % notasJumanji.nota.mean())

print("Média de notas do Toy Story %.2f" % notasToyStory.nota.median())
print("Média de notas do Jumanji %.2f" % notasJumanji.nota.median())